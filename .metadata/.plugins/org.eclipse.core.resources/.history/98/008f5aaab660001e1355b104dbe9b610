//blink user LED2 connected to PB7

//we need to get the perpheral base
#define PERIPH_BASE (0x40000000UL)

//need to get the bus for which the port is connected to -> AHB1
#define AHB1_OFFSET (0x00020000UL)
#define AHB1_BASE	(PERIPH_BASE+AHB1_OFFSET)

//the rcc
#define RCC_OFFSET (0x3800UL)
#define RCC_BASE (AHB1_BASE + RCC_OFFSET)
//need to get how to turn on the bus for the particular port
#define RCC_AHB1_OFFSET (0x30UL)
#define RCC_AHB1_R (*(volatile unsigned int*)(RCC_AHB1_OFFSET + RCC_BASE))
//to enable for portb we enable the bit at pos 1
#define RCC_PORTB_EN (1<<1)

//need to get the address of the port
#define GPIOB_OFFSET (0x00000400UL)
#define GPIOB_BASE (AHB1_BASE + GPIOB_OFFSET)
//need to get the registers responsible for
	//mode
#define GPIO_MODE_OFFSET (0x00UL)
#define GPIOB_MODE_R (*(volatile unsigned int*)(GPIOB_BASE + GPIO_MODE_OFFSET))
// for pin 7 we go to set 01 to pos 14,15
#define GPIO_PORTB_PIN7_SET14 (1<<14)
#define GPIO_PORTB_PIN7_CLEAR15 (1<<15)
	//output data
#define GPIOB_OUTPUTD_OFFSET (0x14UL)
#define GPIOB_OUTPUTD_R	(*(volatile unsigned int*)(GPIOB_BASE + GPIOB_OUTPUTD_OFFSET))
#define GPIOB_PIN7_OUT (1<<7)



//GPIOB
#define GPIOB_OFFSET (0x00000400)
#define GPIOB_BASE (AHB1_BASE + GPIOB_OFFSET)

//get the address for activiating the bus - RCC
#define RCC_OFFSET (0x3800)
#define RCC_BASE (AHB1_BASE + RCC_OFFSET)

//enabling the offset
#define AHB1_RCC_EN_OFFSET (0x30)
#define AHB1_RCC_EN_R (*(volatile unsigned int *)(RCC_BASE + AHB1_RCC_EN_OFFSET))
//for port B, is bit 1
#define RCC_PORTB_EN (1<<1);

//gpio mode setup
#define GPIOB_MODE_OFFSET (0x00)
#define GPIOB_MODE_R (*(volatile unsigned int *)(GPIOB_BASE + GPIOB_MODE_OFFSET))
#define GPIOB_7_OUT (1<<14)


//gpiob data
#define GPIOB_OUTDATA_R_OFFSET (0x14)
#define GPIOB_OUTDATA_R (*(volatile unsigned int *)(GPIOB_BASE + GPIOB_OUTDATA_R_OFFSET))

int main(void){
	RCC_AHB1_R |= RCC_PORTB_EN;

	GPIOB_MODE_R |= GPIO_PORTB_PIN7_SET14;
	GPIOB_MODE_R &= ~GPIO_PORTB_PIN7_CLEAR15;
	for(int i=0;i<10000;i++){
	}
	GPIOB_OUTPUTD_R ^= GPIOB_PIN7_OUT;
}
